{
    "openapi": "3.0.0",
    "info": {
        "title": "News Aggregator API",
        "description": "Aggregates news from different sources",
        "version": "1.0.0"
    },
    "paths": {
        "/api/articles": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "List articles with optional filters",
                "description": "Fetch a paginated list of articles with optional filters. Requires authentication.",
                "operationId": "listArticles",
                "parameters": [
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filter criteria for articles (e.g., by keyword, date, categories and sources)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "filters[keyword]=tech&filters[date]=2025-01-01*filters[category_ids][0]=1&filters[source_ids][0]=1"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The number of articles per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of articles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "articles": {
                                            "properties": {
                                                "article": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "The ID of the article",
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "title": {
                                                            "description": "The title of the article",
                                                            "type": "string",
                                                            "example": "Example Title"
                                                        },
                                                        "url": {
                                                            "description": "The link to the article",
                                                            "type": "string",
                                                            "example": "https://www.example.com"
                                                        },
                                                        "description": {
                                                            "description": "The descritpion of the article",
                                                            "type": "string",
                                                            "example": "https://www.example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "meta": {
                                                    "description": "Pagination metadata",
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "description": "Pagination links",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/articles/{id}": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get article details",
                "description": "Fetch details of a specific article by its ID, including related source, category, and author information.",
                "operationId": "getArticle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the article",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Article details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "The ID of the article",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "description": "The title of the article",
                                            "type": "string",
                                            "example": "Example Title"
                                        },
                                        "url": {
                                            "description": "The link to the article",
                                            "type": "string",
                                            "example": "https://www.example.com"
                                        },
                                        "description": {
                                            "description": "The descritpion of the article",
                                            "type": "string",
                                            "example": "https://www.example.com"
                                        },
                                        "source": {
                                            "description": "Details of the article's source",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Tech Blog"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "category": {
                                            "description": "Details of the article's category",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Technology"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "author": {
                                            "description": "Details of the article's author",
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Article not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user and returns an access token along with the user's name.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the user",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "The email address of the user",
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "description": "The password for the user",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "The password confirmation",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "description": "The name of the registered user",
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "access_token": {
                                            "description": "The access token for the user",
                                            "type": "string",
                                            "example": "token1234abcd5678"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "description": "Validation error details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Logs in a user and returns an access token if credentials are valid.",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The email address of the user",
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "description": "The password for the user",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User successfully logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "description": "The access token for the user",
                                            "type": "string",
                                            "example": "token1234abcd5678"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "message": {
                                                    "description": "Error message",
                                                    "type": "string",
                                                    "example": "Invalid credentials"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the authenticated user",
                "description": "Logs out the currently authenticated user and returns their details.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "User successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "description": "The ID of the user",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "The name of the user",
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "description": "The email address of the user",
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating the user is not logged in",
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Allows a user to reset their password using their email address and a new password.",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "The email address of the user",
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "description": "The new password for the user",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "description": "Indicates that the password reset was successful",
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "description": "Details about the validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message indicating the user was not found",
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preferences": {
            "get": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Get user preferences",
                "description": "Fetch the preferences of the currently authenticated user.",
                "operationId": "getUserPreferences",
                "responses": {
                    "200": {
                        "description": "User preferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "preferences": {
                                            "properties": {
                                                "source_ids": {
                                                    "description": "IDs of the preferred sources",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "category_ids": {
                                                    "description": "IDs of the preferred categories",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "author_ids": {
                                                    "description": "IDs of the preferred authors",
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer",
                                                        "example": 3
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/user/personalized-feed": {
            "post": {
                "tags": [
                    "User Preferences"
                ],
                "summary": "Save user preferences",
                "description": "Save or update the preferences of the currently authenticated user.",
                "operationId": "saveUserPreferences",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "preferences": {
                                        "description": "The preferences data to be saved",
                                        "properties": {
                                            "source_ids": {
                                                "description": "IDs of the preferred sources",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "category_ids": {
                                                "description": "IDs of the preferred categories",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "author_ids": {
                                                "description": "IDs of the preferred authors",
                                                "type": "array",
                                                "items": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Preferences saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preferences saved"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "errors": {
                                            "description": "Details about validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/personalized-news-feed": {
            "get": {
                "tags": [
                    "News Feed"
                ],
                "summary": "Generate personalized news feed",
                "description": "Generates a personalized news feed based on the authenticated user's preferences.",
                "operationId": "getPersonalizedNewsFeed",
                "responses": {
                    "200": {
                        "description": "Personalized news feed retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "articles": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "description": "The ID of the article",
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "title": {
                                                                "description": "The title of the article",
                                                                "type": "string",
                                                                "example": "Example Title"
                                                            },
                                                            "url": {
                                                                "description": "The link to the article",
                                                                "type": "string",
                                                                "example": "https://www.example.com"
                                                            },
                                                            "description": {
                                                                "description": "The description of the article",
                                                                "type": "string",
                                                                "example": "This is a sample article description"
                                                            },
                                                            "source": {
                                                                "description": "Details of the article's source",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Tech Blog"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "category": {
                                                                "description": "Details of the article's category",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Technology"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "author": {
                                                                "description": "Details of the article's author",
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 1
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "John Doe"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "meta": {
                                                    "description": "Pagination metadata",
                                                    "type": "object"
                                                },
                                                "links": {
                                                    "description": "Pagination links",
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preferences not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preferences not found, cannot generate personalized news feed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Articles",
            "description": "Articles"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "User Preferences",
            "description": "User Preferences"
        },
        {
            "name": "News Feed",
            "description": "News Feed"
        }
    ],
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}